/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import com.alee.laf.WebLookAndFeel;
import com.alee.laf.desktoppane.WebInternalFrame;
import com.alee.laf.optionpane.WebOptionPane;
import com.alee.laf.table.WebTable;
import com.alee.managers.language.LanguageManager;
import com.alee.managers.notification.NotificationManager;
import com.alee.managers.notification.WebNotification;
import dao.CarCapContasDAO;
import enumeraveis.TipoConta;
import enumeraveis.TipoGrafico;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import model.CarCapContas;
import model.Graficos;
import org.jfree.chart.ChartPanel;

/**
 *
 * @author Alisson Ap
 */
public class FormFluxodeCaixa extends WebInternalFrame {

    /**
     * Creates new form FormFluxodeCaixa
     */
    TipoGrafico tipo;
    String titulo;

    public FormFluxodeCaixa() {

        super("Fluxo de Caixa", true, true, true, true);
        this.initComponents();

        checkbox_Grafico.setSelected(true);
        checkbox_Lista.setSelected(true);
        checkboxEntrada.setSelected(true);
        checkboxSaida.setSelected(true);
        ChartPanel C;
        Date novo = new Date();

        Calendar c = Calendar.getInstance();

        txtDataFinal.setDate(c.getTime());

        c.add(Calendar.DATE, -1);

        txtDataInicial.setDate(c.getTime());
        tipo = TipoGrafico.barras;
        titulo = "Grafico de Área";
        checkbox_Grafico.setSelected(false);
        
       
        verificaTipoGrafico(TipoConta.ambos);
      //  CarregarGraficoJTable(titulo, tipo, 1, TipoConta.ambos);
        CarregarGraficoJTable(null, null, 3, TipoConta.ambos);
        
        verificaSpliPanel();

    }
///        GroupPanel g = new GroupPanel ( splitPane );
//        g.setBounds(0,0,500,500);
//        this.add(g);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        webPanel3 = new com.alee.laf.panel.WebPanel();
        webPanel_Split = new com.alee.laf.splitpane.WebSplitPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        webTable1 = new com.alee.laf.table.WebTable();
        WebPanelGrafico = new com.alee.extended.breadcrumb.WebBreadcrumbPanel();
        webPanel_Tabela = new com.alee.laf.panel.WebPanel();
        webBreadcrumb1 = new com.alee.extended.breadcrumb.WebBreadcrumb();
        webLabel1 = new com.alee.laf.label.WebLabel();
        webLabel2 = new com.alee.laf.label.WebLabel();
        txtDataInicial = new com.alee.extended.date.WebDateField();
        txtDataFinal = new com.alee.extended.date.WebDateField();
        webLabel3 = new com.alee.laf.label.WebLabel();
        webComboBox1 = new com.alee.laf.combobox.WebComboBox();
        webLabel4 = new com.alee.laf.label.WebLabel();
        checkboxEntrada = new com.alee.laf.checkbox.WebCheckBox();
        checkboxSaida = new com.alee.laf.checkbox.WebCheckBox();
        webLabel5 = new com.alee.laf.label.WebLabel();
        checkbox_Grafico = new com.alee.laf.checkbox.WebCheckBox();
        checkbox_Lista = new com.alee.laf.checkbox.WebCheckBox();
        webButton1 = new com.alee.laf.button.WebButton();
        webBreadcrumb2 = new com.alee.extended.breadcrumb.WebBreadcrumb();
        btn_MovRecentes = new com.alee.laf.button.WebButton();
        webButton4 = new com.alee.laf.button.WebButton();
        btn_GerarRelatorio = new com.alee.laf.button.WebButton();
        webButton6 = new com.alee.laf.button.WebButton();
        GrapLinhas = new com.alee.laf.checkbox.WebCheckBox();
        grapBarras = new com.alee.laf.checkbox.WebCheckBox();
        grapPizza = new com.alee.laf.checkbox.WebCheckBox();
        webLabel10 = new com.alee.laf.label.WebLabel();
        webBreadcrumb3 = new com.alee.extended.breadcrumb.WebBreadcrumb();
        webLabel7 = new com.alee.laf.label.WebLabel();
        webLabel8 = new com.alee.laf.label.WebLabel();
        webLabel9 = new com.alee.laf.label.WebLabel();
        txtTotalEntradas = new com.alee.laf.text.WebTextField();
        txtTotalSaidas = new com.alee.laf.text.WebTextField();
        txtTotalDisponivel = new com.alee.laf.text.WebTextField();

        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        webPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        webPanel_Split.setAlignmentX(-40.0F);
        webPanel_Split.setPreferredSize(new java.awt.Dimension(7, 1));
        webPanel_Split.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
                webPanel_SplitAncestorMoved(evt);
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        webPanel_Split.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                webPanel_SplitMouseDragged(evt);
            }
        });
        webPanel_Split.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                webPanel_SplitFocusLost(evt);
            }
        });
        webPanel_Split.addHierarchyBoundsListener(new java.awt.event.HierarchyBoundsListener() {
            public void ancestorMoved(java.awt.event.HierarchyEvent evt) {
                webPanel_SplitAncestorMoved1(evt);
            }
            public void ancestorResized(java.awt.event.HierarchyEvent evt) {
            }
        });
        webPanel_Split.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                webPanel_SplitMousePressed(evt);
            }
        });
        webPanel_Split.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                webPanel_SplitComponentMoved(evt);
            }
            public void componentResized(java.awt.event.ComponentEvent evt) {
                webPanel_SplitComponentResized(evt);
            }
        });
        webPanel_Split.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                webPanel_SplitPropertyChange(evt);
            }
        });

        webTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(webTable1);

        webPanel_Split.setLeftComponent(jScrollPane1);

        WebPanelGrafico.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        webPanel_Split.setLeftComponent(WebPanelGrafico);

        javax.swing.GroupLayout webPanel_TabelaLayout = new javax.swing.GroupLayout(webPanel_Tabela);
        webPanel_Tabela.setLayout(webPanel_TabelaLayout);
        webPanel_TabelaLayout.setHorizontalGroup(
            webPanel_TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1125, Short.MAX_VALUE)
        );
        webPanel_TabelaLayout.setVerticalGroup(
            webPanel_TabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );

        webPanel_Split.setRightComponent(webPanel_Tabela);

        webPanel3.add(webPanel_Split, java.awt.BorderLayout.CENTER);

        webLabel1.setText("Data Inicial:");

        webLabel2.setText("Data Final:");

        txtDataInicial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDataInicialActionPerformed(evt);
            }
        });

        webLabel3.setText("Definir:");

        webComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diário", "Semanal", "Mensal" }));

        webLabel4.setText("Tipo de Operação");
        webLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        checkboxEntrada.setText("Entrada");
        checkboxEntrada.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkboxEntradaStateChanged(evt);
            }
        });

        checkboxSaida.setText("Saída");
        checkboxSaida.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkboxSaidaStateChanged(evt);
            }
        });

        webLabel5.setText("Visualização");
        webLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        checkbox_Grafico.setText("Gráfico");
        checkbox_Grafico.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkbox_GraficoStateChanged(evt);
            }
        });

        checkbox_Lista.setText("Lista");
        checkbox_Lista.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkbox_ListaStateChanged(evt);
            }
        });

        webButton1.setText("Filtrar");

        javax.swing.GroupLayout webBreadcrumb1Layout = new javax.swing.GroupLayout(webBreadcrumb1);
        webBreadcrumb1.setLayout(webBreadcrumb1Layout);
        webBreadcrumb1Layout.setHorizontalGroup(
            webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webBreadcrumb1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(webComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(webBreadcrumb1Layout.createSequentialGroup()
                        .addComponent(checkboxEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(checkboxSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(webBreadcrumb1Layout.createSequentialGroup()
                        .addComponent(checkbox_Grafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkbox_Lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        webBreadcrumb1Layout.setVerticalGroup(
            webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webBreadcrumb1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(webBreadcrumb1Layout.createSequentialGroup()
                        .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(webLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(webLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(checkboxEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkboxSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox_Grafico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkbox_Lista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(webBreadcrumb1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(webLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(webLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDataInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDataFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(webLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(webButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        webBreadcrumb2.setBackground(new java.awt.Color(255, 255, 51));
        webBreadcrumb2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        webBreadcrumb2.setForeground(new java.awt.Color(255, 255, 102));

        btn_MovRecentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/movimentacoes-icon.png"))); // NOI18N
        btn_MovRecentes.setToolTipText("Visualizar lançamentos da semana");
        btn_MovRecentes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_MovRecentesActionPerformed(evt);
            }
        });

        btn_GerarRelatorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reports-icon.png"))); // NOI18N
        btn_GerarRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_GerarRelatorioActionPerformed(evt);
            }
        });

        webButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                webButton6ActionPerformed(evt);
            }
        });

        GrapLinhas.setText("LINHAS ");
        GrapLinhas.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                GrapLinhasStateChanged(evt);
            }
        });
        GrapLinhas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GrapLinhasActionPerformed(evt);
            }
        });

        grapBarras.setText("BARRAS");
        grapBarras.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                grapBarrasStateChanged(evt);
            }
        });
        grapBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grapBarrasActionPerformed(evt);
            }
        });

        grapPizza.setText("PIZZA ");
        grapPizza.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                grapPizzaStateChanged(evt);
            }
        });
        grapPizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grapPizzaActionPerformed(evt);
            }
        });

        webLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Grafico.png"))); // NOI18N
        webLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout webBreadcrumb2Layout = new javax.swing.GroupLayout(webBreadcrumb2);
        webBreadcrumb2.setLayout(webBreadcrumb2Layout);
        webBreadcrumb2Layout.setHorizontalGroup(
            webBreadcrumb2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webBreadcrumb2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(webBreadcrumb2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(grapBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GrapLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grapPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(webBreadcrumb2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(btn_GerarRelatorio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn_MovRecentes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(webButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webBreadcrumb2Layout.setVerticalGroup(
            webBreadcrumb2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webBreadcrumb2Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(btn_MovRecentes, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btn_GerarRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(webButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(webButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(107, 107, 107)
                .addComponent(webLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GrapLinhas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grapBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(grapPizza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(234, Short.MAX_VALUE))
        );

        webBreadcrumb3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        webLabel7.setText("Total de Entradas:");

        webLabel8.setText("Total de Saídas:");

        webLabel9.setText("Total disponível em Caixa:");

        javax.swing.GroupLayout webBreadcrumb3Layout = new javax.swing.GroupLayout(webBreadcrumb3);
        webBreadcrumb3.setLayout(webBreadcrumb3Layout);
        webBreadcrumb3Layout.setHorizontalGroup(
            webBreadcrumb3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(webBreadcrumb3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotalSaidas, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49)
                .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTotalDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        webBreadcrumb3Layout.setVerticalGroup(
            webBreadcrumb3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, webBreadcrumb3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(webBreadcrumb3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(webLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(webLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalEntradas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalSaidas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTotalDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(webBreadcrumb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(webBreadcrumb1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(webBreadcrumb3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(webPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(webBreadcrumb2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(webBreadcrumb1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(webPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(webBreadcrumb3, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDataInicialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDataInicialActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDataInicialActionPerformed

    public void CarregarGraficoJTable(String nome, TipoGrafico tipografico, int posicao, TipoConta tipoconta) {

        CarCapContasDAO buscarconta = new CarCapContasDAO();

        ArrayList<CarCapContas> contas = new ArrayList<>();

        if (tipoconta == TipoConta.Entrada) {

            contas = (ArrayList<CarCapContas>) buscarconta.ListarContas(TipoConta.Entrada);

        } else if (tipoconta == TipoConta.Saida) {

            contas = (ArrayList<CarCapContas>) buscarconta.ListarContas(TipoConta.Saida);

        } else if (tipoconta == TipoConta.ambos) {

            contas = (ArrayList<CarCapContas>) buscarconta.ListarTodos();

        }

        //Calendar c2 = Calendar.getInstance();
        // posicao = 1 (esquerda), posicao = 2 (direita), posicao 3 = JTable direita
        if (posicao == 1) {

            Graficos grap = new Graficos(tipo, this.titulo);
            ChartPanel c = grap.informarDadosGrafico("grafico", contas);

            WebPanelGrafico.removeAll();

            webPanel_Split.validate();

            int largura = WebPanelGrafico.getWidth();
            int altura = WebPanelGrafico.getHeight();

            WebPanelGrafico.setBounds(0, 0, largura, altura);

            c.setBounds(0, 0, largura, altura);
            c.addPropertyChangeListener(null);

            WebPanelGrafico.add(c);

            WebPanelGrafico.revalidate();
            WebPanelGrafico.repaint();

        } else if (posicao == 2) {

            Graficos grap = new Graficos(tipo, this.titulo);
            ChartPanel c = grap.informarDadosGrafico("grafico", contas);

            webPanel_Tabela.removeAll();

            webPanel_Split.validate();

            int largura = webPanel_Tabela.getWidth();
            int altura = webPanel_Tabela.getHeight();

            webPanel_Tabela.setBounds(0, 0, largura, altura);

            c.setBounds(0, 0, largura, altura);

            webPanel_Tabela.add(c);

            webPanel_Tabela.revalidate();
            webPanel_Tabela.repaint();

        } else if (posicao == 3) {

            double totalEntradas = 0;
            double totalSaidas = 0;
            double totalDisponivel = 0;
            
            WebTable tablenovo = new WebTable();

            DefaultTableModel modelTabela = new DefaultTableModel(new Object[]{"Id", "Status", "Data", "Tipo", "Valor Total","Valor Pago"}, 0);

            for (CarCapContas i : contas) {

                Object[] data = {i.getContaId(), i.getCapContaStatus(), i.getContaDataEmissao(), i.getContaTipo(), i.getContaValorTotal(), i.getContaValorPago()};

                modelTabela.addRow(data);
                
               if(i.getContaTipo().equals(TipoConta.Entrada)){
                   
                   totalEntradas += i.getContaValorPago();
                   
               }else if(i.getContaTipo().equals(TipoConta.Saida)){
                   
                   totalSaidas += i.getContaValorPago();
                   
               }
            }
            
            txtTotalEntradas.setText(String.valueOf(totalEntradas));
            txtTotalSaidas.setText(String.valueOf(totalSaidas));

            tablenovo.setModel(modelTabela);

            JScrollPane tableContainer = new JScrollPane(tablenovo);

            webPanel_Tabela.removeAll();

            webPanel_Split.validate();

            int largura = webPanel_Tabela.getWidth();
            int altura = webPanel_Tabela.getHeight();

            webPanel_Tabela.setBounds(0, 0, largura, altura);

            tableContainer.setBounds(0, 0, largura, altura);

            webPanel_Tabela.add(tableContainer);

            webPanel_Tabela.revalidate();
            webPanel_Tabela.repaint();

        }
    }

    public void verificaTipoGrafico(TipoConta tipoconta) {

        if (GrapLinhas.isSelected() && !grapBarras.isSelected() && !grapPizza.isSelected()) {

            this.titulo = "Gráfico de Linhas";
            this.tipo = TipoGrafico.linear;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            // Recarrega a WebPanel
            CarregarGraficoJTable("", null, 3, tipoconta);

        } else if (!GrapLinhas.isSelected() && grapBarras.isSelected() && !grapPizza.isSelected()) {

            this.titulo = "Gráfico de Barras";
            this.tipo = TipoGrafico.barras;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            CarregarGraficoJTable("", null, 3, tipoconta);

        } else if (!GrapLinhas.isSelected() && !grapBarras.isSelected() && grapPizza.isSelected()) {

            this.titulo = "Gráfico de Pizza";
            this.tipo = TipoGrafico.pizza;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            CarregarGraficoJTable("", null, 3, tipoconta);

        } else if (GrapLinhas.isSelected() && grapBarras.isSelected() && !grapPizza.isSelected() && checkbox_Grafico.isSelected()) {
              

            //  webPanel_Split.setDividerLocation(.5f);
            this.titulo = "Gráfico de Linhas";
            this.tipo = TipoGrafico.linear;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            this.titulo = "Gráfico de Barras";
            this.tipo = TipoGrafico.barras;
            CarregarGraficoJTable(titulo, tipo, 2, tipoconta);
            
           

        } else if (!GrapLinhas.isSelected() && grapBarras.isSelected() && grapPizza.isSelected() && checkbox_Grafico.isSelected()) {



            this.titulo = "Gráfico de Barras";
            this.tipo = TipoGrafico.barras;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            this.titulo = "Gráfico de Pizza";
            this.tipo = TipoGrafico.pizza;
            CarregarGraficoJTable(titulo, tipo, 2, tipoconta);
            
            

        } else if (GrapLinhas.isSelected() && !grapBarras.isSelected() && grapPizza.isSelected() && checkbox_Grafico.isSelected()) {

            this.titulo = "Gráfico de Linhas";
            this.tipo = TipoGrafico.linear;
            CarregarGraficoJTable(titulo, tipo, 1, tipoconta);

            this.titulo = "Gráfico de Pizza";
            this.tipo = TipoGrafico.pizza;
            CarregarGraficoJTable(titulo, tipo, 2, tipoconta);
            

        } else {

            CarregarGraficoJTable(null, null, 3, tipoconta);

        }
    }

    public void verificaSpliPanel() {

        if (checkbox_Grafico.isSelected()) {

            if (checkbox_Lista.isSelected()) {

                webPanel_Split.setDividerLocation(.5f);

            } else {

                if (!grapPizza.isSelected() && !grapBarras.isSelected() && !GrapLinhas.isSelected()) {
                    webPanel_Split.setDividerLocation(1210);
                } else {

                   // if(grapPizza.isSelected() || grapBarras.isSelected() || GrapLinhas.isSelected())
                    
                    checkbox_Lista.setSelected(true);
                    webPanel_Split.setDividerLocation(.5f);
                }

            }

        } else {

            if (checkbox_Lista.isSelected()) {

                webPanel_Split.setDividerLocation(1);

            } else {
//                if(!checkbox_Lista.getActionCommand().equals("Lista")) {

                webPanel_Split.setDividerLocation(1);
                checkbox_Lista.setSelected(true);

                CarregarNotificacao("Filtro por Lista aplicado automaticamente!");

            }

        }

    }

    public void CarregarNotificacao(String msg) {

        WebNotification notificationPopup = new WebNotification();
        notificationPopup.setDisplayTime(5000);

        notificationPopup.setContent(msg);

        NotificationManager.showNotification(notificationPopup);

    }

    public boolean MensagensConfirmacao(String msg, String tituloPainel) {

        int resposta = WebOptionPane.showConfirmDialog(null, msg, tituloPainel, WebOptionPane.YES_NO_OPTION,
                WebOptionPane.QUESTION_MESSAGE);

        if (resposta == WebOptionPane.YES_OPTION) {

            return true;

        } else {

            return false;

        }

    }

    public int verificaMarcados() {

        int conta = 0;

        if (GrapLinhas.isSelected()) {

            conta++;

        }

        if (grapBarras.isSelected()) {

            conta++;

        }

        if (grapPizza.isSelected()) {

            conta++;
        }

        return conta;

    }

    public TipoConta verificaTipodeConta() {

        if (checkboxEntrada.isSelected() && checkboxSaida.isSelected()) {

            verificaTipoGrafico(TipoConta.ambos);

            return TipoConta.ambos;

        } else if (!checkboxEntrada.isSelected() && checkboxSaida.isSelected()) {

            verificaTipoGrafico(TipoConta.Saida);

            return TipoConta.Saida;

        } else if (checkboxEntrada.isSelected() && !checkboxSaida.isSelected()) {

            verificaTipoGrafico(TipoConta.Entrada);

            return TipoConta.Entrada;

        }

        return null;
    }


    private void checkbox_GraficoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkbox_GraficoStateChanged

        verificaSpliPanel();
        verificaTipodeConta();

        if (!checkbox_Grafico.isSelected()) {

            grapBarras.setSelected(false);
            grapPizza.setSelected(false);
            GrapLinhas.setSelected(false);

        }
// TODO add your handling code here:
    }//GEN-LAST:event_checkbox_GraficoStateChanged

    private void checkbox_ListaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkbox_ListaStateChanged

        verificaSpliPanel();

    }//GEN-LAST:event_checkbox_ListaStateChanged

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened

        verificaSpliPanel();

    }//GEN-LAST:event_formInternalFrameOpened

    private void btn_GerarRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_GerarRelatorioActionPerformed

        boolean retornoMetodo = MensagensConfirmacao("O relatório será gerado de acordo com os filtros aplicados em tela, deseja prosseguir?", "Tela de Confirmação");

        if (retornoMetodo) {

            CarregarNotificacao("Relatório gerado com sucesso!");

        } else {

        }


    }//GEN-LAST:event_btn_GerarRelatorioActionPerformed

    private void webButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_webButton6ActionPerformed

    }//GEN-LAST:event_webButton6ActionPerformed

    private void GrapLinhasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GrapLinhasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GrapLinhasActionPerformed

    private void grapBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grapBarrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grapBarrasActionPerformed

    private void grapPizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grapPizzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grapPizzaActionPerformed

    private void webPanel_SplitComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_webPanel_SplitComponentResized

    }//GEN-LAST:event_webPanel_SplitComponentResized

    private void webPanel_SplitComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_webPanel_SplitComponentMoved

    }//GEN-LAST:event_webPanel_SplitComponentMoved

    private void webPanel_SplitAncestorMoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_webPanel_SplitAncestorMoved

    }//GEN-LAST:event_webPanel_SplitAncestorMoved

    private void webPanel_SplitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_webPanel_SplitFocusLost

    }//GEN-LAST:event_webPanel_SplitFocusLost

    private void webPanel_SplitAncestorMoved1(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_webPanel_SplitAncestorMoved1

    }//GEN-LAST:event_webPanel_SplitAncestorMoved1

    private void webPanel_SplitPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_webPanel_SplitPropertyChange

        verificaTipoGrafico(verificaTipodeConta());

    }//GEN-LAST:event_webPanel_SplitPropertyChange


    private void webPanel_SplitMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_webPanel_SplitMouseDragged
        // ajustaGrafico();
    }//GEN-LAST:event_webPanel_SplitMouseDragged

    private void webPanel_SplitMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_webPanel_SplitMousePressed

    }//GEN-LAST:event_webPanel_SplitMousePressed

    private void GrapLinhasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_GrapLinhasStateChanged

        verificaSpliPanel();
        
        int marcados = verificaMarcados();
        
        
        if (marcados <= 2) {

            verificaTipoGrafico(verificaTipodeConta());

            System.out.println("tipoconta:" + verificaTipodeConta().toString());

        } else if (GrapLinhas.isSelected()) {

            CarregarNotificacao("Só é possível visualizar 2 gráficos por vez!");

            GrapLinhas.setSelected(false);

        }
        
    }//GEN-LAST:event_GrapLinhasStateChanged

    private void grapBarrasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_grapBarrasStateChanged

        verificaSpliPanel();

            int marcados = verificaMarcados();
        
        
        if (marcados <= 2) {

            verificaTipoGrafico(verificaTipodeConta());

            System.out.println("tipoconta:" + verificaTipodeConta().toString());

        } else if (grapBarras.isSelected()) {

            CarregarNotificacao("Só é possível visualizar 2 gráficos por vez!");

            grapBarras.setSelected(false);

        }


    }//GEN-LAST:event_grapBarrasStateChanged

    private void grapPizzaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_grapPizzaStateChanged

        verificaSpliPanel();
        
        int marcados = verificaMarcados();
        
        
        if (marcados <= 2) {

            verificaTipoGrafico(verificaTipodeConta());

            System.out.println("tipoconta:" + verificaTipodeConta().toString());

        } else if (grapPizza.isSelected()) {

            CarregarNotificacao("Só é possível visualizar 2 gráficos por vez!");

            grapPizza.setSelected(false);

        }
        
        
        

    }//GEN-LAST:event_grapPizzaStateChanged

    private void btn_MovRecentesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_MovRecentesActionPerformed

        CarregarNotificacao("Os registros da semana foram carregados com sucesso !");

    }//GEN-LAST:event_btn_MovRecentesActionPerformed

    private void checkboxEntradaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkboxEntradaStateChanged

        verificaTipoGrafico(verificaTipodeConta());


    }//GEN-LAST:event_checkboxEntradaStateChanged

    private void checkboxSaidaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkboxSaidaStateChanged

        verificaTipoGrafico(verificaTipodeConta());
    }//GEN-LAST:event_checkboxSaidaStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(() -> {

            WebLookAndFeel.setDecorateAllWindows(true);
            WebLookAndFeel.setDecorateDialogs(true);
            WebLookAndFeel.setDecorateFrames(true);

            LanguageManager.setDefaultLanguage(LanguageManager.PORTUGUESE);

            WebLookAndFeel.install();

            FormFluxodeCaixa fluxo = new FormFluxodeCaixa();
            fluxo.setVisible(true);

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.alee.laf.checkbox.WebCheckBox GrapLinhas;
    private com.alee.extended.breadcrumb.WebBreadcrumbPanel WebPanelGrafico;
    private com.alee.laf.button.WebButton btn_GerarRelatorio;
    private com.alee.laf.button.WebButton btn_MovRecentes;
    private com.alee.laf.checkbox.WebCheckBox checkboxEntrada;
    private com.alee.laf.checkbox.WebCheckBox checkboxSaida;
    private com.alee.laf.checkbox.WebCheckBox checkbox_Grafico;
    private com.alee.laf.checkbox.WebCheckBox checkbox_Lista;
    private com.alee.laf.checkbox.WebCheckBox grapBarras;
    private com.alee.laf.checkbox.WebCheckBox grapPizza;
    private javax.swing.JScrollPane jScrollPane1;
    private com.alee.extended.date.WebDateField txtDataFinal;
    private com.alee.extended.date.WebDateField txtDataInicial;
    private com.alee.laf.text.WebTextField txtTotalDisponivel;
    private com.alee.laf.text.WebTextField txtTotalEntradas;
    private com.alee.laf.text.WebTextField txtTotalSaidas;
    private com.alee.extended.breadcrumb.WebBreadcrumb webBreadcrumb1;
    private com.alee.extended.breadcrumb.WebBreadcrumb webBreadcrumb2;
    private com.alee.extended.breadcrumb.WebBreadcrumb webBreadcrumb3;
    private com.alee.laf.button.WebButton webButton1;
    private com.alee.laf.button.WebButton webButton4;
    private com.alee.laf.button.WebButton webButton6;
    private com.alee.laf.combobox.WebComboBox webComboBox1;
    private com.alee.laf.label.WebLabel webLabel1;
    private com.alee.laf.label.WebLabel webLabel10;
    private com.alee.laf.label.WebLabel webLabel2;
    private com.alee.laf.label.WebLabel webLabel3;
    private com.alee.laf.label.WebLabel webLabel4;
    private com.alee.laf.label.WebLabel webLabel5;
    private com.alee.laf.label.WebLabel webLabel7;
    private com.alee.laf.label.WebLabel webLabel8;
    private com.alee.laf.label.WebLabel webLabel9;
    private com.alee.laf.panel.WebPanel webPanel3;
    private com.alee.laf.splitpane.WebSplitPane webPanel_Split;
    private com.alee.laf.panel.WebPanel webPanel_Tabela;
    private com.alee.laf.table.WebTable webTable1;
    // End of variables declaration//GEN-END:variables

}
